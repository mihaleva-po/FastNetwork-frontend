import styles from './menu.module.scss';
import React from "react";
import {useNavigate} from "react-router-dom";

interface PropsFace {
    selectedBlock: number
}

export function Menu({selectedBlock}: PropsFace) {

    const menu = [
        {
            title: 'Запросы',
            svg: '<svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="0 0 26 26" fill="none">\n' +
                '  <path d="M2.01843 20.8705C2.01843 19.4053 2.63572 16.6377 6.03078 16.6377H11.2777C14.2098 16.6377 15.29 19.4053 15.29 20.8705M23.3147 20.8705C23.3147 19.4053 22.2345 16.6377 19.3024 16.6377H17.1419M20.3826 10.7769C20.3826 12.3054 19.2081 13.5445 17.7592 13.5445C16.3103 13.5445 15.1357 12.3054 15.1357 10.7769C15.1357 9.24836 16.3103 8.00927 17.7592 8.00927C19.2081 8.00927 20.3826 9.24836 20.3826 10.7769ZM11.7407 9.63727C11.7407 11.6153 10.2206 13.2189 8.34559 13.2189C6.47055 13.2189 4.95053 11.6153 4.95053 9.63727C4.95053 7.6592 6.47055 6.05566 8.34559 6.05566C10.2206 6.05566 11.7407 7.6592 11.7407 9.63727Z" stroke-width="1.5" stroke-linecap="round"/>\n' +
                '</svg>'
        },
        {
            title: 'Моя Анкета',
            svg: '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="20" viewBox="0 0 16 20" fill="none">\n' +
                '  <path fill-rule="evenodd" clip-rule="evenodd" d="M7.8889 10.6188H7.92089C10.8489 10.6188 13.2299 8.23776 13.2299 5.30976C13.2299 2.38176 10.8489 -0.000244141 7.92089 -0.000244141C4.99189 -0.000244141 2.60989 2.38176 2.60989 5.30676C2.59989 8.22676 4.9669 10.6098 7.8889 10.6188ZM4.03789 5.30976C4.03789 3.16876 5.77989 1.42776 7.92089 1.42776C10.0609 1.42776 11.8019 3.16876 11.8019 5.30976C11.8019 7.44976 10.0609 9.19176 7.92089 9.19176H7.89189C5.75989 9.18376 4.03089 7.44376 4.03789 5.30976Z" />\n' +
                '  <path fill-rule="evenodd" clip-rule="evenodd" d="M-0.00012207 16.1731C-0.00012207 19.8701 5.96188 19.8701 7.92088 19.8701C11.3199 19.8701 15.8399 19.4891 15.8399 16.1931C15.8399 12.4961 9.87988 12.4961 7.92088 12.4961C4.52088 12.4961 -0.00012207 12.8771 -0.00012207 16.1731ZM1.49988 16.1731C1.49988 14.7281 3.65988 13.9961 7.92088 13.9961C12.1809 13.9961 14.3399 14.7351 14.3399 16.1931C14.3399 17.6381 12.1809 18.3701 7.92088 18.3701C3.65988 18.3701 1.49988 17.6311 1.49988 16.1731Z" />\n' +
                '</svg>'
        },
        {
            title: 'Настройки',
            svg: '<svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 433 449" fill="none">\n' +
                '  <path fill-rule="evenodd" clip-rule="evenodd" d="M281.952 19.152C281.4 16.1129 279.981 13.2982 277.866 11.047C275.752 8.79588 273.031 7.20428 270.032 6.46403C234.928 -2.16379 198.256 -2.16379 163.152 6.46403C160.15 7.20158 157.426 8.79199 155.308 11.0434C153.19 13.2947 151.769 16.1109 151.216 19.152L142.624 66.416C133.699 70.6071 125.146 75.5475 117.056 81.184L71.8241 64.992C68.9144 63.9464 65.7642 63.7663 62.7543 64.4733C59.7444 65.1803 57.0038 66.7443 54.8641 68.976C29.8513 95.0715 11.5173 126.827 1.42407 161.536C-0.335933 167.6 1.63207 174.128 6.43207 178.208L43.0721 209.28C42.2721 219.104 42.2721 228.976 43.0721 238.8L6.43207 269.872C1.63207 273.968 -0.335933 280.496 1.42407 286.56C11.5185 321.269 29.8524 353.024 54.8641 379.12C59.2481 383.68 65.8721 385.232 71.8241 383.12L117.056 366.912C125.136 372.544 133.696 377.472 142.624 381.664L151.216 428.944C152.336 435.168 157.008 440.128 163.136 441.616C198.24 450.256 234.928 450.256 270.016 441.616C273.017 440.883 275.742 439.296 277.861 437.047C279.979 434.799 281.4 431.984 281.952 428.944L290.544 381.664C299.456 377.488 308.016 372.544 316.112 366.912L361.344 383.12C367.28 385.232 373.92 383.68 378.288 379.12C403.31 353.032 421.646 321.274 431.728 286.56C432.593 283.59 432.579 280.434 431.688 277.472C430.796 274.51 429.065 271.87 426.704 269.872L390.064 238.8C390.912 228.992 390.912 219.12 390.064 209.28L426.704 178.208C429.065 176.213 430.797 173.576 431.689 170.617C432.58 167.658 432.594 164.503 431.728 161.536C421.648 126.821 403.312 95.0631 378.288 68.976C376.151 66.7399 373.411 65.1717 370.401 64.4617C367.391 63.7517 364.239 63.9304 361.328 64.976L316.096 81.184C308.014 75.5443 299.466 70.6038 290.544 66.416L281.952 19.152ZM252.368 35.376L260.576 80.496C261.552 85.888 265.216 90.416 270.272 92.464C282.231 97.3525 293.47 103.844 303.68 111.76C308 115.104 313.744 116.032 318.88 114.176L362.08 98.72C377.786 116.959 389.927 137.984 397.872 160.704L362.88 190.384C360.824 192.123 359.242 194.354 358.279 196.869C357.317 199.383 357.006 202.101 357.376 204.768C359.136 217.568 359.136 230.528 357.376 243.328C357.006 245.998 357.317 248.717 358.279 251.235C359.242 253.752 360.824 255.986 362.88 257.728L397.872 287.392C389.927 310.108 377.791 331.133 362.096 349.376L318.896 333.904C316.359 332.999 313.634 332.75 310.974 333.177C308.315 333.605 305.806 334.697 303.68 336.352C293.472 344.256 282.24 350.736 270.272 355.616C265.216 357.696 261.552 362.192 260.576 367.584L252.368 412.736C228.72 417.216 204.432 417.216 180.8 412.736L172.576 367.584C172.097 364.934 170.958 362.449 169.263 360.357C167.568 358.264 165.373 356.634 162.88 355.616C150.928 350.737 139.695 344.256 129.488 336.352C127.363 334.701 124.857 333.612 122.201 333.184C119.545 332.756 116.824 333.004 114.288 333.904L71.0721 349.376C55.3654 331.138 43.2242 310.112 35.2801 287.392L70.2721 257.712C72.3259 255.974 73.9085 253.747 74.8733 251.235C75.8381 248.724 76.1541 246.01 75.7921 243.344C74.0321 230.544 74.0321 217.568 75.7921 204.768C76.16 202.099 75.8467 199.381 74.8816 196.866C73.9165 194.351 72.3308 192.121 70.2721 190.384L35.2801 160.704C43.219 137.981 55.3607 116.955 71.0721 98.72L114.272 114.176C119.424 116.032 125.152 115.104 129.472 111.776C139.681 103.854 150.92 97.3575 162.88 92.464C165.372 91.4501 167.568 89.8228 169.263 87.7333C170.958 85.6437 172.098 83.1598 172.576 80.512L180.8 35.392C204.432 30.88 228.72 30.864 252.368 35.376ZM216.576 126.896C190.816 126.913 166.117 137.155 147.904 155.371C129.69 173.587 119.453 198.288 119.44 224.048C119.44 277.664 162.96 321.184 216.576 321.184C270.192 321.184 313.728 277.664 313.728 224.048C313.728 170.448 270.208 126.896 216.576 126.896ZM216.576 158.912C252.528 158.912 281.696 188.096 281.696 224.032C281.696 259.968 252.528 289.184 216.576 289.184C180.624 289.184 151.456 260 151.456 224.048C151.456 188.096 180.64 158.912 216.576 158.912Z" />\n' +
                '</svg>'
        },
    ];

    const navigation = useNavigate();

    const onSelectMenuHandler = (numElemMenu: number) => {
        if (numElemMenu === 0) {
            navigation('/myRequests');
        } else if (numElemMenu === 1) {
            navigation('#');
        } else {
            navigation('/settings');
        }
    }

    return (
        <div className={styles['menu-container']}>
            <div className={styles['menu']}>
                {
                    menu.map((el, i) =>
                        <div className={styles['icon']} key={i}>
                            <div onClick={() => onSelectMenuHandler(i)}>
                                <div className={styles['container-svg']}>
                                    <div className={(i === 0 && i === selectedBlock) ? styles['select1']
                                        :
                                        (i === 0) ? styles['svg1']
                                            :
                                            (i === selectedBlock) ? styles['select23'] : styles['svg23']
                                    }
                                         dangerouslySetInnerHTML={{__html: el.svg}}></div>
                                </div>
                                <p style={{color: i === selectedBlock ? '#7E92F8' : '#9E9E9E'}}>{el.title}</p>
                            </div>
                        </div>)
                }
            </div>
        </div>
    )
}
